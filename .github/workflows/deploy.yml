name: Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    #- name: Run linting
    #  run: yarn lint

    - name: Build application
      run: yarn build
      env:
        NODE_ENV: production

    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r .next deployment/
        cp -r public deployment/
        cp -r app deployment/
        cp -r components deployment/
        cp -r contexts deployment/
        cp -r hooks deployment/
        cp -r lib deployment/
        cp -r types deployment/
        cp -r styles deployment/
        cp package.json deployment/
        cp yarn.lock deployment/
        cp next.config.mjs deployment/
        cp tsconfig.json deployment/
        cp postcss.config.mjs deployment/
        cp tailwind.config.js deployment/ 2>/dev/null || true
        cp components.json deployment/
        cp docker-compose.yml deployment/
        cp nginx.conf deployment/
        cp Dockerfile deployment/

    - name: Deploy to Hetzner VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          # Create app directory if it doesn't exist
          mkdir -p /var/www/habit-app
          cd /var/www/habit-app
          
          # Stop existing application
          docker compose down || true
          
          # Clean up Docker to free space
          docker system prune -a -f || true
          docker image prune -a -f || true

    - name: Copy files to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          cd /var/www/habit-app
          rm -rf deployment temp-upload
          mkdir -p temp-upload

    - name: Upload files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        source: "deployment/"
        target: "/var/www/habit-app/temp-upload"
        strip_components: 0

    - name: Move files to correct location
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          cd /var/www/habit-app
          mv temp-upload/deployment/* . 2>/dev/null || true
          mv temp-upload/deployment/.* . 2>/dev/null || true
          rm -rf temp-upload deployment

    - name: Start application with Docker
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          cd /var/www/habit-app
          docker compose up -d --build
          sleep 30
          curl -f http://localhost:3000 || exit 1
          docker system prune -f || true

    - name: Notify deployment status
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          echo "Deployment ${{ job.status }} at $(date)"
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Application deployed successfully"
          else
            echo "❌ Deployment failed"
          fi
