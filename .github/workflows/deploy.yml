name: Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    #- name: Run linting
    #  run: yarn lint

    - name: Build application
      run: yarn build
      env:
        NODE_ENV: production

    - name: Create deployment package
      run: |
        echo "🔍 Creating deployment package..."
        mkdir -p deployment
        echo "📁 Created deployment directory"
        echo "📋 Contents of deployment directory:"
        ls -la deployment/
        echo "📦 Copying application files..."
        cp -r .next deployment/
        cp -r public deployment/
        cp -r components deployment/
        cp -r contexts deployment/
        cp -r hooks deployment/
        cp -r lib deployment/
        cp -r types deployment/
        cp -r styles deployment/
        cp package.json deployment/
        cp yarn.lock deployment/
        cp next.config.mjs deployment/
        cp tsconfig.json deployment/
        cp postcss.config.mjs deployment/
        cp tailwind.config.js deployment/ 2>/dev/null || true
        cp components.json deployment/
        cp docker-compose.yml deployment/
        cp nginx.conf deployment/
        echo "✅ Deployment package created"
        echo "📋 Final contents of deployment directory:"
        ls -la deployment/
        echo "📁 Contents of deployment/.next directory:"
        ls -la deployment/.next/ || echo "❌ .next directory not found!"
        echo "🐳 Checking if docker-compose.yml was copied:"
        ls -la deployment/docker-compose.yml || echo "❌ docker-compose.yml not found in deployment!"

    - name: Deploy to Hetzner VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          # Create app directory if it doesn't exist
          mkdir -p /var/www/habit-app
          cd /var/www/habit-app
          
          # Stop existing application
          docker compose down || true
          
          # Backup current deployment
          if [ -d ".next" ]; then
            mv .next backup-$(date +%Y%m%d-%H%M%S) || true
          fi

    - name: Copy files to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          echo "🔍 Starting VPS preparation..."
          cd /var/www/habit-app
          echo "📁 Current directory: $(pwd)"
          echo "📋 Directory contents:"
          ls -la
          echo "🗑️ Removing old deployment directories..."
          rm -rf deployment temp-upload
          echo "📁 Creating temporary directory for upload..."
          mkdir -p temp-upload
          echo "✅ VPS preparation completed"
          echo "📋 Directory contents after preparation:"
          ls -la

    - name: Upload files to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        source: "deployment/"
        target: "/var/www/habit-app/temp-upload"
        strip_components: 0

    - name: Move files to correct location
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          echo "🔍 Starting file move process..."
          cd /var/www/habit-app
          echo "📁 Current directory: $(pwd)"
          echo "📋 Directory contents before move:"
          ls -la
          echo "📁 Contents of temp-upload directory:"
          ls -la temp-upload/ || echo "❌ temp-upload directory not found!"
          echo "📁 Contents of temp-upload/deployment directory:"
          ls -la temp-upload/deployment/ || echo "❌ temp-upload/deployment directory not found!"
          echo "🔄 Moving files from temp-upload/deployment to main directory..."
          # Move files from temp-upload/deployment to main directory
          mv temp-upload/deployment/* . 2>/dev/null || echo "⚠️ No files to move from temp-upload/deployment/*"
          mv temp-upload/deployment/.* . 2>/dev/null || echo "⚠️ No hidden files to move from temp-upload/deployment/.*"
          echo "📋 Directory contents after move:"
          ls -la
          echo "🗑️ Cleaning up temp directories..."
          # Remove temp directory
          rm -rf temp-upload
          # Remove old deployment directory
          rm -rf deployment
          echo "✅ File move process completed"
          echo "📋 Final directory contents:"
          ls -la

    - name: Start application with Docker
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          echo "🔍 Starting Docker application..."
          cd /var/www/habit-app
          echo "📁 Current directory: $(pwd)"
          echo "📋 Directory contents:"
          ls -la
          echo "🐳 Checking if docker-compose.yml exists:"
          ls -la docker-compose.yml || echo "❌ docker-compose.yml not found!"
          echo "🐳 Starting application with Docker Compose..."
          docker compose up -d --build
          echo "⏳ Waiting for application to be ready..."
          sleep 30
          echo "🏥 Performing health check..."
          curl -f http://localhost:3000 || echo "❌ Health check failed!"
          echo "🧹 Cleaning up old backups (keep last 5)..."
          ls -t backup-* | tail -n +6 | xargs rm -rf || echo "⚠️ No old backups to clean up"
          echo "✅ Docker application startup completed"

    - name: Notify deployment status
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USERNAME }}
        key: ${{ secrets.HETZNER_SSH_KEY }}
        port: ${{ secrets.HETZNER_PORT || 22 }}
        script: |
          echo "Deployment ${{ job.status }} at $(date)"
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Application deployed successfully"
          else
            echo "❌ Deployment failed"
          fi
